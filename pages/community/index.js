import Head from "next/head";
import Image from "next/legacy/image";
import { Top } from "../../components/communitylp/top";
// import { NavBar } from "../../components/eventlp/nav";
import Link from "next/link";
import { client } from "../../libs/client";
import { Footer } from "../../components/footer";
import { Resolve } from "../../components/communitylp/resolve";
import { Whystop } from "../../components/eventlp/whystop";
import { Feature } from "@/components/communitylp/feature";
import { Message } from "@/components/eventlp/message";
import { useState, useEffect } from "react";
import { throttle } from "lodash";
import { Link as ScrollLink } from "react-scroll";
import { Privilege } from "@/components/communitylp/privilege";
import { Step } from "@/components/communitylp/step";
import { Recommend } from "@/components/communitylp/recommend";
import { Whatyoucando } from "@/components/communitylp/whatyoucando";
import { Pricing } from "@/components/communitylp/pricing";
import { Compare } from "@/components/communitylp/compare";
import { Restart } from "@/components/communitylp/restart";
export const getStaticProps = async () => {
  const data = await client.get({ endpoint: "event" });
  return {
    props: {
      event: data.contents[0],
      eventurl: data.contents[0].url,
    },
  };
};

export default function Home({ event, eventurl }) {
  const [scrollPosition, setScrollPosition] = useState(0);

  const handleScroll = throttle(() => {
    setScrollPosition(window.scrollY);
  }, 150); // 150ミリ秒ごとにスクロール位置を更新

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);

    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const isBrowser = typeof window !== "undefined";
  const isButtonVisible = isBrowser
    ? scrollPosition > window.innerHeight * 0.5
    : false;

  const buttonClassNames = isButtonVisible
    ? " transition-opacity duration-500 ease-in-out opacity-100"
    : " transition-opacity duration-500 ease-in-out opacity-0";

  return (
    <>
      <Head>
        <title>Restart</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <div className="hidde z-50 mb-10 bg-blue-200">
        <NavBar />
      </div>{" "} */}
      <Top />
      <Restart />
      <Recommend />
      <Whatyoucando />

      <Whystop />

      <Feature />
      <Privilege />

      <Step />
      <Resolve />
      <Pricing />
      <Compare />

      <Message />

      <div className={buttonClassNames}>
        <div className="md:mt-10 md:mt-0 btns grid justify-center md:fle md:gap- fixed bottom-5 left-1/2 right-1/2 z-40">
          <ScrollLink to="formSection" smooth={true} duration={500}>
            <button className="shine-button whitespace-nowrap text-xl md:self-end bg-orange-500 text-white md:font-semibold font-medium py-3 px-8 rounded-full shadow-md md:hover:bg-orange-700 md:focus:outline-none md:focus:ring-2 md:focus:ring-offset-2 md:focus:ring-orange-500 transition duration-500 ease-in-out">
              <p className="text-sm">簡単2ステップで!</p>
              Restart Onlineに参加する
            </button>
          </ScrollLink>
        </div>
      </div>
      <Footer />
    </>
  );
}
